auto-complete unique map {
	from interface_of {
		family: {
			metamodel: "server"
			behaviour: "serverRules"
			transformers: "transformerRules"
		}
		
		using [
			addSubClass(server.Queue, "InputQueue"),
			addSubClass(server.Queue, "OutputQueue"),
			reTypeToSubClass(serverRules.process, server.Queue, server.InputQueue, "iq"),
			reTypeToSubClass(serverRules.process, server.Queue, server.OutputQueue, "oq"),
			mvAssocDown(server.Server.in, server.InputQueue),
			mvAssocDown(server.Server.out, server.OutputQueue)
		] 
	}
	
	to {
		metamodel: "pls"
		behaviour: "plsRules"
	}
	
	type_mapping {
		class server.Server => pls.Polisher
		class server.Queue => pls.Container
		class server.InputQueue => pls.Tray
		class server.OutputQueue => pls.Conveyor
		reference server.Server.in => pls.Machine.in
		reference server.Server.out => pls.Machine.out
		reference server.Queue.elts => pls.Container.parts
		class server.Input => pls.Part
		class server.Output => pls.Part
		class server.Element => pls.Part
	}
}