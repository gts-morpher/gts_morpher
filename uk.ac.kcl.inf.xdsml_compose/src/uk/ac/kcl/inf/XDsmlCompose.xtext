grammar uk.ac.kcl.inf.XDsmlCompose with org.eclipse.xtext.common.Terminals

generate xDsmlCompose "http://www.ac.uk/kcl/inf/XDsmlCompose"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.inf.kcl.ac.uk/xdsml_compose/2017/adaptation/1.0" as gts

GTSMapping:
	(autoComplete ?= "auto-complete" (uniqueCompletion ?= "unique")?)? "map" "{"
		"from" source = GTSSpecification
		"to" target = GTSSpecification 
	 
		typeMapping = TypeGraphMapping
		(behaviourMapping = BehaviourMapping)?
	"}"
;

GTSSpecification:
	"{"
		"metamodel" ":" metamodel = [ecore::EPackage | STRING]
		("behaviour" ":" behaviour = [gts::Module | STRING])?
	"}"
;

TypeGraphMapping:
	"type_mapping" "{"
		mappings += TypeMapping+ 
	"}"
;

TypeMapping:
	ClassMapping | ReferenceMapping
;

ClassMapping:
	"class" source = [ecore::EClassifier | QualifiedName] "=>" target = [ecore::EClassifier | QualifiedName]
;

ReferenceMapping:
	"reference" source = [ecore::EReference | QualifiedName] "=>" target = [ecore::EReference | QualifiedName]
;

BehaviourMapping:
	"behaviour_mapping" "{"
		mappings += RuleMapping+
	"}"
;

RuleMapping:
	"rule" target=[gts::Rule | QualifiedName] "to" source=[gts::Rule | QualifiedName] "{"
		element_mappings += RuleElementMapping+
	"}"
;

RuleElementMapping:
	ObjectMapping | LinkMapping
;

ObjectMapping:
	"object" source = [gts::Object | ID] "=>" target = [gts::Object | ID]
;

LinkMapping:
	"link" source = [gts::Link | LinkName] "=>" target = [gts::Link | LinkName]
;

LinkName :
	"[" ID "->" ID ":" ID "]"
;

QualifiedName:
	ID ('.' ID)*
;